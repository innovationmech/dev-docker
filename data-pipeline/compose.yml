services:
  postgresql:
    image: postgres:13.16
    container_name: postgresql
    environment:
      - POSTGRES_USER=postgres_user # Set PostgreSQL username
      - POSTGRES_PASSWORD=postgres_password # Set PostgreSQL user password
      - POSTGRES_DB=demo_db # Initial database name
    ports:
      - "5432:5432" # Map port 5432
    volumes:
      - pg_data:/var/lib/postgresql/data # Persist PostgreSQL data

  # Flink JobManager and TaskManager services
  jobmanager:
    image: flink:1.19-scala_2.12-java11
    container_name: flink_jobmanager
    hostname: jobmanager
    ports:
      - "8081:8081" # Flink Web UI
    environment:
      - "FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager"
    command: jobmanager

  taskmanager:
    image: flink:1.19-scala_2.12-java11
    hostname: taskmanager
    environment:
      - "FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager"
    depends_on:
      - jobmanager
    command: taskmanager
    deploy:
      replicas: 2 # Start 2 TaskManagers, you can adjust as needed

  # Kafka and Zookeeper services
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka


volumes:
  pg_data:
    driver: local
  kafka_data:
    driver: local